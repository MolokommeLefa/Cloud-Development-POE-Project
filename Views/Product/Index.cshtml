@model IEnumerable<CLDV6212_GROUP_04.Models.Product>

@{
    ViewData["Title"] = "Product Management";
}

<div class="container-fluid">
    <!-- Header Section -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 text-primary mb-1">
                <i class="fas fa-boxes me-2"></i>Product Management
            </h1>
            <p class="text-muted mb-0">Manage your product inventory and listings</p>
        </div>
        <a asp-action="Create" class="btn btn-success">
            <i class="fas fa-plus-circle me-2"></i>Add New Product
        </a>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-primary shadow-sm h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Total Products</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Count()</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-boxes fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-success shadow-sm h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">In Stock</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Count(p => p.StockQuantity > 0)</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-check-circle fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-warning shadow-sm h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">Low Stock</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Count(p => p.StockQuantity > 0 && p.StockQuantity <= 10)</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-exclamation-triangle fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-danger shadow-sm h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">Out of Stock</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Count(p => p.StockQuantity == 0)</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-times-circle fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Filter Section -->
    <div class="card shadow-sm mb-4">
        <div class="card-header bg-light py-3">
            <div class="row">
                <div class="col-md-6">
                    <div class="input-group">
                        <input type="text" id="searchInput" class="form-control" placeholder="Search products..." aria-label="Search">
                        <button class="btn btn-outline-secondary" type="button" id="searchButton">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>
                <div class="col-md-6 text-end">
                    <div class="btn-group">
                        <button type="button" class="btn btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown">
                            <i class="fas fa-filter me-1"></i>Filter
                        </button>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item filter-option" data-filter="all">All Products</a></li>
                            <li><a class="dropdown-item filter-option" data-filter="in-stock">In Stock</a></li>
                            <li><a class="dropdown-item filter-option" data-filter="low-stock">Low Stock</a></li>
                            <li><a class="dropdown-item filter-option" data-filter="out-of-stock">Out of Stock</a></li>
                        </ul>
                    </div>
                    <button class="btn btn-outline-primary ms-2" id="resetFilters">
                        <i class="fas fa-sync-alt me-1"></i>Reset
                    </button>
                </div>
            </div>
        </div>

        <!-- Product Table -->
        <div class="card-body">
            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover" id="productsTable">
                        <thead class="table-dark">
                            <tr>
                                <th>Product ID</th>
                                <th>Product Name</th>
                                <th>Description</th>
                                <th>Price</th>
                                <th>Stock</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                var stockStatus = item.StockQuantity == 0 ? "out-of-stock" :
                                item.StockQuantity <= 10 ? "low-stock" : "in-stock";
                                var statusClass = item.StockQuantity == 0 ? "danger" :
                                item.StockQuantity <= 10 ? "warning" : "success";

                                <tr class="product-row" data-status="@stockStatus">
                                    <td>
                                        <span class="badge bg-secondary">@item.ProductID</span>
                                    </td>
                                    <td>
                                        <strong>@item.productName</strong>
                                    </td>
                                    <td>
                                        <small class="text-muted" title="@item.productDescription">
                                            @(item.productDescription.Length > 50 ? item.productDescription.Substring(0, 50) + "..." : item.productDescription)
                                        </small>
                                    </td>
                                    <td>
                                        <span class="fw-bold text-success">R @item.Price.ToString("N2")</span>
                                    </td>
                                    <td>
                                        <div class="progress" style="height: 8px; width: 80px;">
                                            @{
                                                var progressPercentage = Math.Min((item.StockQuantity / 100.0) * 100, 100);
                                            }
                                            <div class="progress-bar bg-@statusClass"
                                                 role="progressbar"
                                                 style="width: @progressPercentage%"
                                                 aria-valuenow="@item.StockQuantity"
                                                 aria-valuemin="0"
                                                 aria-valuemax="100">
                                            </div>
                                        </div>
                                        <small>@item.StockQuantity units</small>
                                    </td>
                                    <td>
                                        <span class="badge bg-@statusClass">
                                            @if (item.StockQuantity == 0)
                                            {
                                                <i class="fas fa-times-circle me-1"></i>
                                                <span>Out of Stock</span>
                                            }
                                            else if (item.StockQuantity <= 10)
                                            {
                                                <i class="fas fa-exclamation-triangle me-1"></i>
                                                <span>Low Stock</span>
                                            }
                                            else
                                            {
                                                <i class="fas fa-check-circle me-1"></i>
                                                <span>In Stock</span>
                                            }
                                        </span>
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-sm">
                                            <a asp-action="Edit" asp-route-id="@item.RowKey"
                                               class="btn btn-outline-primary" title="Edit Product">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <a asp-action="Details" asp-route-id="@item.RowKey"
                                               class="btn btn-outline-info" title="View Details">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a asp-action="Delete" asp-route-id="@item.RowKey"
                                               class="btn btn-outline-danger" title="Delete Product">
                                                <i class="fas fa-trash"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination (for future scalability) -->
                <nav aria-label="Product pagination">
                    <ul class="pagination justify-content-center">
                        <li class="page-item disabled">
                            <a class="page-link" href="#" tabindex="-1">Previous</a>
                        </li>
                        <li class="page-item active"><a class="page-link" href="#">1</a></li>
                        <li class="page-item"><a class="page-link" href="#">2</a></li>
                        <li class="page-item"><a class="page-link" href="#">3</a></li>
                        <li class="page-item">
                            <a class="page-link" href="#">Next</a>
                        </li>
                    </ul>
                </nav>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-box-open fa-4x text-muted mb-3"></i>
                    <h4 class="text-muted">No Products Found</h4>
                    <p class="text-muted">Get started by adding your first product to the inventory.</p>
                    <a asp-action="Create" class="btn btn-primary mt-3">
                        <i class="fas fa-plus-circle me-2"></i>Add First Product
                    </a>
                </div>
            }
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="d-flex gap-2 justify-content-end">
        <a asp-action="Create" class="btn btn-success">
            <i class="fas fa-plus-circle me-2"></i>New Product
        </a>
        <button class="btn btn-outline-primary">
            <i class="fas fa-file-export me-2"></i>Export
        </button>
        <button class="btn btn-outline-secondary">
            <i class="fas fa-print me-2"></i>Print
        </button>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Search functionality
            const searchInput = document.getElementById('searchInput');
            const searchButton = document.getElementById('searchButton');
            const productRows = document.querySelectorAll('.product-row');
            const resetButton = document.getElementById('resetFilters');

            function filterProducts() {
                const searchTerm = searchInput.value.toLowerCase();

                productRows.forEach(row => {
                    const productName = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
                    const description = row.querySelector('td:nth-child(3)').textContent.toLowerCase();
                    const shouldShow = productName.includes(searchTerm) || description.includes(searchTerm);

                    row.style.display = shouldShow ? '' : 'none';
                });
            }

            searchInput.addEventListener('input', filterProducts);
            searchButton.addEventListener('click', filterProducts);

            // Filter functionality
            document.querySelectorAll('.filter-option').forEach(option => {
                option.addEventListener('click', function() {
                    const filter = this.getAttribute('data-filter');

                    productRows.forEach(row => {
                        const rowStatus = row.getAttribute('data-status');
                        const shouldShow = filter === 'all' || rowStatus === filter;
                        row.style.display = shouldShow ? '' : 'none';
                    });
                });
            });

            // Reset filters
            resetButton.addEventListener('click', function() {
                searchInput.value = '';
                productRows.forEach(row => {
                    row.style.display = '';
                });
            });

            // Delete confirmation
            document.querySelectorAll('.btn-outline-danger').forEach(button => {
                button.addEventListener('click', function(e) {
                    if (!confirm('Are you sure you want to delete this product?')) {
                        e.preventDefault();
                    }
                });
            });
        });
    </script>
}

@section Styles {
    <style>
        .card {
            border: none;
            border-radius: 0.5rem;
        }

        .table-hover tbody tr:hover {
            background-color: #f8f9fa;
            transform: translateY(-1px);
            transition: all 0.2s ease;
        }

        .progress {
            background-color: #e9ecef;
            border-radius: 0.375rem;
        }

        .btn-group-sm > .btn {
            padding: 0.25rem 0.5rem;
            font-size: 0.875rem;
        }

        .border-left-primary { border-left: 4px solid #4e73df !important; }
        .border-left-success { border-left: 4px solid #1cc88a !important; }
        .border-left-warning { border-left: 4px solid #f6c23e !important; }
        .border-left-danger { border-left: 4px solid #e74a3b !important; }
    </style>
}